
---
import Layout from "../../layouts/Layout.astro";
---

<Layout title="Etl">
<link rel="stylesheet" href="/css/prism.css" />
<link rel="stylesheet" href="/css/style.css" />
    <div class="side-bar hidden md:block">
    <h2>Etl</h2>
    <p>Solutions to etl in various languages.</p>
    <ul>
      <li><a href="/exercism.html">Index</a></li>
    </ul>
    <ul><li><a href="#elm">Elm</a></li><li><a href="#roc">Roc</a></li></ul>
    </div>
    <div class="main md:ml-[300px] px-2">
    
            <h3><a name="elm">Elm</a></h3>
            <a href="/languages/elm">Other Elm solutions.</a>
            <pre><code class="language-elm">{`module Etl exposing (transform)

import Dict exposing (Dict)


transform : Dict Int (List String) -> Dict String Int
transform input =
    let
        convertScoreEntry ( score, letters ) =
            letters
                |> List.map (\\l -> ( String.toLower l, score ))
    in
    Dict.toList input
        |> List.concatMap convertScoreEntry
        |> Dict.fromList
`}</code></pre>
        

            <h3><a name="roc">Roc</a></h3>
            <a href="/languages/roc">Other Roc solutions.</a>
            <pre><code class="language-roc">{`module [transform]

transform : Dict U64 (List U8) -> Dict U8 U64
transform = \\legacy ->
    Dict.walk legacy (Dict.empty {}) \\acc, score, letters ->
        letters
        |> List.map \\letter -> (toLower letter, score)
        |> Dict.fromList
        |> Dict.insertAll acc

toLower = \\char -> if char >= 'A' && char <= 'Z' then char + ('a' - 'A') else char
`}</code></pre>
        
    </div>

    <script src="/js/prism.js" isinline></script>
    <script>
        Prism.languages['roc'] = Prism.languages['elm']
    </script>
<style>
a[href] {
  color: #f15125;
}
</style>
</Layout>
