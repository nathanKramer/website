
---
import Layout from "../../layouts/Layout.astro";
---

<Layout title="Resistor Color">
<link rel="stylesheet" href="/css/prism.css" />
<link rel="stylesheet" href="/css/style.css" />
    <div class="side-bar hidden md:block">
    <h2>Resistor Color</h2>
    <p>Solutions to resistor-color in various languages.</p>
    <ul>
      <li><a href="/exercism.html">Index</a></li>
    </ul>
    <ul><li><a href="#roc">Roc</a></li><li><a href="#c">C</a></li></ul>
    </div>
    <div class="main md:ml-[300px] px-2">
    
            <h3><a name="roc">Roc</a></h3>
            <a href="/languages/roc">Other Roc solutions.</a>
            <pre><code class="language-roc">{`module [colorCode, colors]

colorMap =
    Dict.fromList [
        ("black", 0),
        ("brown", 1),
        ("red", 2),
        ("orange", 3),
        ("yellow", 4),
        ("green", 5),
        ("blue", 6),
        ("violet", 7),
        ("grey", 8),
        ("white", 9),
    ]

colorCode : Str -> Result U64 _
colorCode = \\color ->
    Dict.get colorMap color

colors : List Str
colors = Dict.keys colorMap
`}</code></pre>
        

            <h3><a name="c">C</a></h3>
            <a href="/languages/c">Other C solutions.</a>
            <pre><code class="language-c">{`#include "resistor_color.h"

resistor_band_t *colors()
{
   static resistor_band_t band[resistor_band_length];
   for (resistor_band_t c = 0; c < resistor_band_length; c += 1)
      band[(int)c] = c;

   return band;
}

int color_code(resistor_band_t c)
{
   return (int)c;
}
`}</code></pre>
        
    </div>

    <script src="/js/prism.js" isinline></script>

<style>
a[href] {
  color: #f15125;
}
</style>
</Layout>
