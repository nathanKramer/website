
---
import Layout from "../../layouts/Layout.astro";
---

<Layout title="Reverse String">
<link rel="stylesheet" href="/css/prism.css" />
<link rel="stylesheet" href="/css/style.css" />
    <div class="side-bar hidden md:block">
    <h2>Reverse String</h2>
    <p>Solutions to reverse-string in various languages.</p>
    <ul>
      <li><a href="/exercism.html">Index</a></li>
    </ul>
    <ul><li><a href="#nim">Nim</a></li><li><a href="#clojure">Clojure</a></li></ul>
    </div>
    <div class="main md:ml-[300px] px-2">
    
            <h3><a name="nim">Nim</a></h3>
            <a href="/languages/nim">Other Nim solutions.</a>
            <pre><code class="language-nim">{`proc reverse*(s: string): string =
  if s == "":
    return s

  var aux = s
  for i in 0 .. high(s) div 2:
    swap(aux[i], aux[high(aux) - i])
  aux
`}</code></pre>
        

            <h3><a name="clojure">Clojure</a></h3>
            <a href="/languages/clojure">Other Clojure solutions.</a>
            <pre><code class="language-clojure">{`(ns reverse-string)

(defn reverse-string [s]
  (let [reversed-chars (into () s)] ;; https://clojuredocs.org/clojure.core/into
  (apply str reversed-chars)))
`}</code></pre>
        
    </div>

    <script src="/js/prism.js" isinline></script>
    <script>
        Prism.languages['roc'] = Prism.languages['elm']
    </script>
<style>
a[href] {
  color: #f15125;
}
</style>
</Layout>
